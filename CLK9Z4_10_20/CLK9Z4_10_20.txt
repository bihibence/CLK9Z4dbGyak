1. feladat:

CREATE TABLE GYARTO(adoszam INT PRIMARY KEY,nev CHAR(30),telephely CHAR(30));
CREATE TABLE TERMEK(tkod INT PRIMARY KEY,nev CHAR(50),ear INT CHECK (ear>0),gyarto INT FOREIGN KEY REFERENCES Gyarto(nev));

2. feladat:

CREATE TABLE GYARTO(adoszam INT PRIMARY KEY,new CHAR(30),telephely CHAR,irsz CHAR(4),varos CHAR(40),utca CHAR(100));
CREATE TABLE TERMEK(tkod INT PRIMARY KEY,nev CHAR(50),ear INT CHECK (ear>0),gyarto INT FOREIGN KEY REFERENCES GYARTO(nev));
CREATE TABLE EGYSEGEK(aru INT FOREIGN KEY REFERENCES TERMEK(tkod),db INT CHECK (db>0));
CREATE TABLE KOMPONENS(termek INT FOREIGN KEY REFERENCES TERMEK(nev),alkatresz INT FOREIGN KEY REFERENCES ALKATRESZ(akod));
CREATE TABLE ALKATRESZ(akod INT PRIMARY KEY,nev CHAR(50));

3. feladat:

CREATE TABLE Tanfolyam(tkod INT PRIMARY KEY,ár INT,tipus CHAR(30),megnevezes CHAR(30));
CREATE TABLE Resztvevo(tajszam INT PRIMARY KEY,név CHAR(50),lakcim CHAR(50));

4. fealdat:

CREATE TABLE termekek (tkod INT PRIMARY KEY, nev VARCHAR(50) NOT NULL, ear INT CHECK (ear > 0), kategoria CHAR(20));

Feltöltések:

INSERT INTO termekek VALUES("1","lapát","2000","K1");
INSERT INTO termekek VALUES("2","sepru","4000","K2");
INSERT INTO termekek VALUES("3","mosogató gél","1500","K3");
INSERT INTO termekek VALUES("4","szappan","1000","K4");
INSERT INTO termekek VALUES("5","pohár","2400","K5");

5. feladat:

INSERT INTO termekek VALUES("alma","lapát","2000","K1");  // hibás szám konstans;
INSERT INTO termekek VALUES("1",NULL,"2000","K1"); //üres név;
INSERT INTO termekek VALUES("2","lapát","alma","K1"); //konstans helyett char;
INSERT INTO termekek VALUES("3","lapát","2000",NULL); //üres kategória;

6. feladat:

CREATE TABLE KÖNYV(isbn CHAR(20) PRIMARY KEY,cim CHAR(40),targy CHAR(30),ar INT);